<?php

namespace Manager\Bundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Manager\Bundle\Entity\User;

/**
 * CompanyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CompanyRepository extends EntityRepository
{
    public function getCompanies($step, $searchText = "",  $month = 0, $week = 0, User $manager = null, $sortFields = 'p.saleDate', $sortDirection = 'desc')
    {
        $em = $this->getEntityManager();
        $repository = $em->getRepository("ManagerBundle:Company");

        $queryBuilder = $repository->createQueryBuilder('p');
        $queryBuilder
            ->innerJoin('p.step','u')
            ->where("u = :step")
            ->andWhere("(p.name LIKE :text OR p.email LIKE :text OR p.orgCode LIKE :text OR p.address LIKE :text OR p.contact LIKE :text OR p.phone LIKE :text OR p.postalCode LIKE :text OR p.product LIKE :text)")
            ->andWhere("p.rejected = 0 and p.trashed = 0")
            ->setParameter('step', $step->getId())
            ->setParameter("text","%$searchText%")
            ->orderBy($sortFields, $sortDirection)
        ;
        if ($month)
        {
            $queryBuilder->andWhere("MONTH(p.saleDate) = :month")
                ->setParameter("month",$month);
        }
        if ($week)
        {
            $queryBuilder->andWhere("FLOOR((DayOfMonth(p.saleDate)-1)/7)+1 = :week")
                ->setParameter("week",$week);
        }
        if ($manager)
        {
            $queryBuilder->andWhere("p.creator = :manager")
                ->setParameter("manager",$manager);
        }
        return $queryBuilder->getQuery();
    }

    public function getAllCompaniesQuery($searchText = "",  $month = 0, $week = 0, User $manager = null, $sortFields = 'p.saleDate', $sortDirection = 'desc')
    {
        $em = $this->getEntityManager();
        $repository = $em->getRepository("ManagerBundle:Company");
        $queryBuilder = $repository->createQueryBuilder('p');
        $queryBuilder
            ->where("(p.name LIKE :text OR p.email LIKE :text OR p.orgCode LIKE :text OR p.address LIKE :text OR p.contact LIKE :text OR p.phone LIKE :text OR p.postalCode LIKE :text OR p.product LIKE :text)")
            ->orderBy('p.saleDate','DESC')
            ->setParameter("text","%$searchText%")
            ->orderBy($sortFields, $sortDirection);
        if ($month)
        {
            $queryBuilder->andWhere("MONTH(p.saleDate) = :month")
                ->setParameter("month",$month);
        }
        if ($week)
        {
            $queryBuilder->andWhere("FLOOR((DayOfMonth(p.saleDate)-1)/7)+1 = :week")
                ->setParameter("week",$week);
        }
        if ($manager)
        {
            $queryBuilder->andWhere("p.creator = :manager")
                ->setParameter("manager",$manager);
        }
        return $queryBuilder->getQuery();
    }

    public function getRejectedListQuery($searchText = "",  $month = 0, $week = 0, User $manager = null, $sortFields = 'p.saleDate', $sortDirection = 'desc')
    {
        $em = $this->getEntityManager();
        $repository = $em->getRepository("ManagerBundle:Company");
        $queryBuilder = $repository->createQueryBuilder('p');
        $queryBuilder->where("p.rejected = 1 and (p.name LIKE :text OR p.email LIKE :text OR p.orgCode LIKE :text OR p.address LIKE :text OR p.contact LIKE :text OR p.phone LIKE :text OR p.postalCode LIKE :text OR p.product LIKE :text) and p.trashed = 0")
            ->orderBy('p.saleDate','DESC')
            ->setParameter("text","%$searchText%")
            ->orderBy($sortFields, $sortDirection);
        if ($month)
        {
            $queryBuilder->andWhere("MONTH(p.saleDate) = :month")
                ->setParameter("month",$month);
        }
        if ($week)
        {
            $queryBuilder->andWhere("FLOOR((DayOfMonth(p.saleDate)-1)/7)+1 = :week")
                ->setParameter("week",$week);
        }
        if ($manager)
        {
            $queryBuilder->andWhere("p.creator = :manager")
                ->setParameter("manager",$manager);
        }
        return $queryBuilder->getQuery();
    }

    public function getReportedCompanies($searchText = "",  $month = 0, $week = 0, User $manager = null, $sortFields = 'p.saleDate', $sortDirection = 'desc')
    {
        $em = $this->getEntityManager();
        $repository = $em->getRepository("ManagerBundle:Company");
        $queryBuilder = $repository->createQueryBuilder('p');
        $date = strtotime("now");
        $date = strtotime("-5 day", $date);
        $searchDate = date('Y-m-d', $date)." 23:59:59";
        $queryBuilder->where("(p.name LIKE :text OR p.email LIKE :text OR p.orgCode LIKE :text OR p.address LIKE :text OR p.contact LIKE :text OR p.phone LIKE :text OR p.postalCode LIKE :text OR p.product LIKE :text) and p.updated <= :dataTime")
            ->orderBy('p.saleDate','DESC')
            ->setParameter("text","%$searchText%")
            ->setParameter('dataTime', $searchDate)
            ->orderBy($sortFields, $sortDirection);
        if ($month)
        {
            $queryBuilder->andWhere("MONTH(p.saleDate) = :month")
                ->setParameter("month",$month);
        }
        if ($week)
        {
            $queryBuilder->andWhere("FLOOR((DayOfMonth(p.saleDate)-1)/7)+1 = :week")
                ->setParameter("week",$week);
        }
        if ($manager)
        {
            $queryBuilder->andWhere("p.creator = :manager")
                ->setParameter("manager",$manager);
        }
        return $queryBuilder->getQuery();
    }

    public function getCompaniesAjaxAction($page, $limit,  $month = 0, $week = 0, User $manager = null)
    {
        $em = $this->getEntityManager();
        $repository = $em->getRepository("ManagerBundle:Company");
        $queryBuilder = $repository->createQueryBuilder('p');
        $queryBuilder->orderBy('p.saleDate','DESC');
        if ($month)
        {
            $queryBuilder->andWhere("MONTH(p.saleDate) = :month")
                ->setParameter("month",$month);
        }
        if ($week)
        {
            $queryBuilder->andWhere("FLOOR((DayOfMonth(p.saleDate)-1)/7)+1 = :week")
                ->setParameter("week",$week);
        }
        if ($manager)
        {
            $queryBuilder->andWhere("p.creator = :manager")
                ->setParameter("manager",$manager);
        }
        $offset = $limit*($page-1);
        $queryBuilder->setMaxResults($limit);
        $queryBuilder->setFirstResult($offset);
        return $queryBuilder->getResult();
    }
}
